import requests
import pandas as pd
import numpy as np

# Function to fetch RSI data from Alpha Vantage
def fetch_rsi(symbol, interval, time_period, series_type, api_key):
    base_url = "https://www.alphavantage.co/query"
    params = {
        "function": "RSI",
        "symbol": symbol,
        "interval": interval,
        "time_period": time_period,
        "series_type": series_type,
        "apikey": api_key,
        "datatype": "json"
    }
    
    response = requests.get(base_url, params=params)
    if response.status_code == 200:
        data = response.json()
        if 'Technical Analysis: RSI' in data:
            df = pd.DataFrame.from_dict(data['Technical Analysis: RSI'], orient='index')
            df = df.rename(columns={'RSI': 'RSI_9'}).astype(float)
            return df
        else:
            raise ValueError("Data retrieval was successful but the expected data is not found.")
    else:
        raise ValueError(f"Error fetching data: {response.status_code} - {response.reason}")

# Function to calculate the Weighted Moving Average
def calculate_wma(data, window):
    weights = np.arange(1, window + 1)
    return data.rolling(window).apply(lambda prices: np.dot(prices, weights) / weights.sum(), raw=True)

# Function to calculate the Exponential Moving Average
def calculate_ema(data, window):
    return data.ewm(span=window, adjust=False).mean()

# API key and symbol setup
api_key = 'T1V6LU3G4RU71ZLF'  # Replace with your API key
symbol = 'RELIANCE.BSE'  # Replace with your BSE stock symbol

# Fetching the RSI data
rsi_data = fetch_rsi(symbol, 'daily', '9', 'close', api_key)

# Calculating WMA and EMA based on RSI
rsi_data['WMA_21_RSI'] = calculate_wma(rsi_data['RSI_9'], 21)
rsi_data['EMA_3_RSI'] = calculate_ema(rsi_data['RSI_9'], 3)

# Displaying the result
print(rsi_data[['RSI_9', 'WMA_21_RSI', 'EMA_3_RSI']])
